[{"C:\\test\\setup-test-task\\src\\index.js":"1","C:\\test\\setup-test-task\\src\\App.js":"2","C:\\test\\setup-test-task\\src\\reportWebVitals.js":"3","C:\\test\\setup-test-task\\src\\Components\\Header\\Header.jsx":"4","C:\\test\\setup-test-task\\src\\Components\\User\\UserList.jsx":"5","C:\\test\\setup-test-task\\src\\Components\\EditUsers\\EditUser.jsx":"6","C:\\test\\setup-test-task\\src\\Components\\User\\AddUsers.jsx":"7","C:\\test\\setup-test-task\\src\\Components\\HomePage\\HomePage.jsx":"8"},{"size":375,"mtime":1607499536246,"results":"9","hashOfConfig":"10"},{"size":699,"mtime":1607499502483,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1606376971923,"results":"12","hashOfConfig":"10"},{"size":728,"mtime":1607498936132,"results":"13","hashOfConfig":"10"},{"size":2196,"mtime":1607499463713,"results":"14","hashOfConfig":"10"},{"size":1885,"mtime":1607499408891,"results":"15","hashOfConfig":"10"},{"size":3463,"mtime":1607584389648,"results":"16","hashOfConfig":"10"},{"size":105,"mtime":1607498866924,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"sf2tzu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\test\\setup-test-task\\src\\index.js",[],["37","38"],"C:\\test\\setup-test-task\\src\\App.js",[],"C:\\test\\setup-test-task\\src\\reportWebVitals.js",[],"C:\\test\\setup-test-task\\src\\Components\\Header\\Header.jsx",[],"C:\\test\\setup-test-task\\src\\Components\\User\\UserList.jsx",["39"],"import React, { useState, useEffect } from 'react'\r\nimport { HomePage } from '../HomePage/HomePage'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const UserList = () => {\r\n\r\nconst [user, setUsers] = useState([])\r\n\r\nuseEffect(() => {\r\n    handleLocalStorage()\r\n} ,[])\r\n\r\nconst handleLocalStorage = () => {\r\n    const obj = JSON.parse(localStorage.getItem('users'))\r\n    setUsers(obj)\r\n}\r\n\r\n\r\nconst removeUser = index => {\r\n    const removeLocalStorage = JSON.parse(localStorage.getItem('users')) || []\r\n    removeLocalStorage.splice(index, 1)\r\n    localStorage.setItem('users', JSON.stringify(removeLocalStorage))\r\n    const removeState = [...user]\r\n    removeState.splice(index, 1)\r\n    setUsers(removeState)\r\n}\r\n\r\nconst editUser = index => {\r\n    const edit = JSON.parse(localStorage.getItem('users'))\r\n    console.log(index);\r\n}\r\n\r\nconst userItems = user.map(res => res)\r\n\r\nreturn<>\r\n    <div className=\"row\">\r\n        <>\r\n        <table class=\"table table-hover table-dark\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Date</th>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">Password</th>\r\n      <th scope=\"col\">Phone</th>\r\n      <th scope=\"col\">Status</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {userItems ? userItems.map(res => {\r\n         return (\r\n              <tr>\r\n          <th scope=\"row\">{res.registrationDate}</th>\r\n          <td>{res.fullName}</td>\r\n          <td>{res.email}</td>\r\n          <td>{res.pass}</td>\r\n          <td>{res.phone}</td>\r\n          <td>{res.status}</td>\r\n          <td>\r\n          <button \r\n          type=\"button\" \r\n            className=\"btn btn-warning\"\r\n            onClick={editUser} \r\n            >\r\n                <Link to='/user-edit' style={{textDecoration: 'none', color: 'white'}}>\r\n                    Edit\r\n                </Link>\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button type=\"button\" \r\n            className=\"btn btn-danger\" \r\n            onClick={removeUser}\r\n            >\r\n                Delet\r\n            </button>\r\n          </td>\r\n          </tr>\r\n         )\r\n      }) : <HomePage/>}\r\n  </tbody>\r\n</table>\r\n        </>\r\n    </div>\r\n</>\r\n}\r\n\r\n\r\n","C:\\test\\setup-test-task\\src\\Components\\EditUsers\\EditUser.jsx",[],"C:\\test\\setup-test-task\\src\\Components\\User\\AddUsers.jsx",["40","41"],"C:\\test\\setup-test-task\\src\\Components\\HomePage\\HomePage.jsx",["42"],"import React from 'react'\r\n\r\nexport const HomePage = () => {\r\n    return<>\r\n        <h1></h1>\r\n    </>\r\n}",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":30,"column":11,"nodeType":"49","messageId":"50","endLine":30,"endColumn":15},{"ruleId":"47","severity":1,"message":"51","line":12,"column":12,"nodeType":"49","messageId":"50","endLine":12,"endColumn":18},{"ruleId":"47","severity":1,"message":"52","line":12,"column":20,"nodeType":"49","messageId":"50","endLine":12,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":5,"column":9,"nodeType":"55","endLine":5,"endColumn":13},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'edit' is assigned a value but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]